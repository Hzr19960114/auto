<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.dao.SysClientMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.SysClient" >
    <id column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="client_name" property="clientName" jdbcType="VARCHAR" />
    <result column="client_ip" property="clientIp" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="checkinterval" property="checkinterval" jdbcType="INTEGER" />
    <result column="client_path" property="clientPath" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="client_type" property="clientType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    client_id, job_id, client_name, client_ip, status, checkinterval, client_path, remark, 
    client_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.SysClientExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_client
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_client
    where client_id = #{clientId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_client
    where client_id = #{clientId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.SysClientExample" >
    delete from sys_client
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.SysClient" >
    insert into sys_client (client_id, job_id, client_name, 
      client_ip, status, checkinterval, 
      client_path, remark, client_type
      )
    values (#{clientId,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, #{clientName,jdbcType=VARCHAR}, 
      #{clientIp,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{checkinterval,jdbcType=INTEGER}, 
      #{clientPath,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{clientType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.SysClient" >
    insert into sys_client
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="clientName != null" >
        client_name,
      </if>
      <if test="clientIp != null" >
        client_ip,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="checkinterval != null" >
        checkinterval,
      </if>
      <if test="clientPath != null" >
        client_path,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="clientType != null" >
        client_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="clientName != null" >
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null" >
        #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="checkinterval != null" >
        #{checkinterval,jdbcType=INTEGER},
      </if>
      <if test="clientPath != null" >
        #{clientPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null" >
        #{clientType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.SysClientExample" resultType="java.lang.Integer" >
    select count(*) from sys_client
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_client
    <set >
      <if test="record.clientId != null" >
        client_id = #{record.clientId,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.clientName != null" >
        client_name = #{record.clientName,jdbcType=VARCHAR},
      </if>
      <if test="record.clientIp != null" >
        client_ip = #{record.clientIp,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.checkinterval != null" >
        checkinterval = #{record.checkinterval,jdbcType=INTEGER},
      </if>
      <if test="record.clientPath != null" >
        client_path = #{record.clientPath,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.clientType != null" >
        client_type = #{record.clientType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_client
    set client_id = #{record.clientId,jdbcType=INTEGER},
      job_id = #{record.jobId,jdbcType=INTEGER},
      client_name = #{record.clientName,jdbcType=VARCHAR},
      client_ip = #{record.clientIp,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      checkinterval = #{record.checkinterval,jdbcType=INTEGER},
      client_path = #{record.clientPath,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      client_type = #{record.clientType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.SysClient" >
    update sys_client
    <set >
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="clientName != null" >
        client_name = #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null" >
        client_ip = #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="checkinterval != null" >
        checkinterval = #{checkinterval,jdbcType=INTEGER},
      </if>
      <if test="clientPath != null" >
        client_path = #{clientPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null" >
        client_type = #{clientType,jdbcType=INTEGER},
      </if>
    </set>
    where client_id = #{clientId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.SysClient" >
    update sys_client
    set job_id = #{jobId,jdbcType=INTEGER},
      client_name = #{clientName,jdbcType=VARCHAR},
      client_ip = #{clientIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      checkinterval = #{checkinterval,jdbcType=INTEGER},
      client_path = #{clientPath,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      client_type = #{clientType,jdbcType=INTEGER}
    where client_id = #{clientId,jdbcType=INTEGER}
  </update>
</mapper>